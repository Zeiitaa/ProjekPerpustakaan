TYPE=TRIGGERS
triggers='CREATE DEFINER=`root`@`localhost` TRIGGER `pembayaran` BEFORE INSERT ON `pembelian` FOR EACH ROW BEGIN\nDECLARE TOTAL INT;\n\nIF (new.JUML_BELI < (SELECT STOK FROM barang WHERE ID_BRG = new.ID_BRG))\n    THEN\nSET TOTAL = (SELECT HARGA FROM BARANG WHERE ID_BRG = new.ID_BRG) * new.JUML_BELI;\n    \n    INSERT INTO pembayaran VALUES (new.ID_PEM, TOTAL);\n    IF (new.JUML_BELI > 50 AND new.JUML_BELI < 100)\n    THEN SET new.JUML_BELI = new.juml_beli + 3;\n    \n    ELSE IF (new.JUML_BELI > 100 AND new.JUML_BELI < 150)\n    THEN SET new.JUML_BELI = new.juml_beli + 5;\n    \n    ELSE IF (new.JUML_BELI > 150)\n    THEN SET new.JUML_BELI = new.JUML_BELI + 10;\n    \n    ELSE SET new.JUML_BELI = new.JUML_BELI;\n    \n    END IF;\n    END IF;\n    END IF;\n    \n    UPDATE barang\n    SET STOK = STOK - new.JUML_BELI WHERE ID_BRG = new.ID_BRG;\n    \n    UPDATE pembayaran\n    SET JUML_PEM = TOTAL, ID_PEM = new.ID_PEM\n    WHERE ID_PEM = new.ID_PEM;\n    \n    ELSE\n    SET @STATUS = \'STOK KURANG/HABIS\';\n    END IF;\n    END' 'CREATE DEFINER=`root`@`localhost` TRIGGER logInsert AFTER INSERT ON pembelian\nFOR EACH ROW BEGIN\nDECLARE KET VARCHAR(300);\nSET KET = CONCAT (\'INSERT DATA ID_PEM = \', new.ID_PEM, \' ID_BRG = \', new.ID_BRG, \' JUML_BELI = \', new.JUML_BELI);\n\nINSERT INTO log_pembelian (OPERASI, WAKTU) VALUES (KET, NOW());\nEND' 'CREATE DEFINER=`root`@`localhost` TRIGGER logUpdate AFTER UPDATE ON pembelian\nFOR EACH ROW BEGIN\nDECLARE KET VARCHAR(300);\nSET KET = CONCAT(\'UPDATE DATA ID_PEM = \', old.ID_PEM, \' MENJADI \', new.ID_PEM,\' ID_BRG = \', old.JUML_BELI, \'MENJADI\', new.JUML_BELI);\n\nINSERT INTO log_pembelian(OPERASI, WAKTU) VALUES\n(KET, NOW());\nEND' 'CREATE DEFINER=`root`@`localhost` TRIGGER `refundbarang` AFTER UPDATE ON `pembelian` FOR EACH ROW BEGIN\n  DECLARE selisih_jml INT;\n  DECLARE harga_barang INT;\n\n  -- Hitung selisih jumlah beli\n  SET selisih_jml = NEW.JUML_BELI - OLD.JUML_BELI;\n\n  -- Ambil harga barang\n  SELECT HARGA INTO harga_barang\n  FROM barang\n  WHERE ID_BRG = NEW.ID_BRG;\n\n  -- Update stok di tabel barang\n  UPDATE barang\n  SET STOK = STOK - selisih_jml\n  WHERE ID_BRG = NEW.ID_BRG;\n\n  -- Masukkan ke log_pembelian\n  INSERT INTO log_pembelian (OPERASI, WAKTU)\n  VALUES (\n    CONCAT(\n      CASE\n        WHEN selisih_jml < 0 THEN \'DELETE DATA \'\n        WHEN selisih_jml > 0 THEN \'INSERT DATA \'\n        ELSE \'UPDATE DATA \'\n      END,\n      \'ID_PEM = \', NEW.ID_PEM,\n      \' ID_BRG = \', NEW.ID_BRG,\n      \' JUML_BELI = \', NEW.JUML_BELI\n    ),\n    NOW()\n  );\n\n  -- Update atau hapus pembayaran\n  IF NEW.JUML_BELI = 0 THEN\n    DELETE FROM pembayaran\n    WHERE ID_PEM = NEW.ID_PEM;\n  ELSE\n    UPDATE pembayaran\n    SET JUML_PEM = NEW.JUML_BELI * harga_barang\n    WHERE ID_PEM = NEW.ID_PEM;\n  END IF;\n\nEND' 'CREATE DEFINER=`root`@`localhost` TRIGGER logDelete AFTER DELETE ON pembelian\nFOR EACH ROW BEGIN\nDECLARE KET VARCHAR(300);\nSET KET = CONCAT (\'DELETE DATA ID_PEM = \', old.ID_PEM, \' ID_BRG = \', old.ID_BRG, \' JUML_BELI = \', old.JUML_BELI);\n\nINSERT INTO log_pembelian(OPERASI, WAKTU) VALUES\n(KET, NOW());\n\nEND'
sql_modes=1098907648 1098907648 1098907648 1098907648 1098907648
definers='root@localhost' 'root@localhost' 'root@localhost' 'root@localhost' 'root@localhost'
client_cs_names='utf8mb4' 'utf8mb4' 'utf8mb4' 'utf8mb4' 'utf8mb4'
connection_cl_names='utf8mb4_unicode_ci' 'utf8mb4_unicode_ci' 'utf8mb4_unicode_ci' 'utf8mb4_unicode_ci' 'utf8mb4_unicode_ci'
db_cl_names='utf8mb4_general_ci' 'utf8mb4_general_ci' 'utf8mb4_general_ci' 'utf8mb4_general_ci' 'utf8mb4_general_ci'
created=1745822917466313 1745219696467777 1745219919232073 1745826156473859 1745220067806409
